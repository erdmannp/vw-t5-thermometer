ARM GAS  /tmp/cctLWi27.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/adc.c"
  18              		.section	.text.MX_ADC_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_ADC_Init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	MX_ADC_Init:
  26              	.LFB40:
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC init function */
  31:Core/Src/adc.c **** void MX_ADC_Init(void)
  32:Core/Src/adc.c **** {
ARM GAS  /tmp/cctLWi27.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 24
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  38              		.loc 1 38 3 view .LVU1
  39              		.loc 1 38 26 is_stmt 0 view .LVU2
  40 0004 0C22     		movs	r2, #12
  41 0006 0021     		movs	r1, #0
  42 0008 01A8     		add	r0, sp, #4
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  45:Core/Src/adc.c ****   */
  46:Core/Src/adc.c ****   hadc.Instance = ADC1;
  45              		.loc 1 46 3 is_stmt 1 view .LVU3
  46              		.loc 1 46 17 is_stmt 0 view .LVU4
  47 000e 2348     		ldr	r0, .L10
  48 0010 234B     		ldr	r3, .L10+4
  49 0012 0360     		str	r3, [r0]
  47:Core/Src/adc.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  50              		.loc 1 47 3 is_stmt 1 view .LVU5
  51              		.loc 1 47 28 is_stmt 0 view .LVU6
  52 0014 0023     		movs	r3, #0
  53 0016 4360     		str	r3, [r0, #4]
  48:Core/Src/adc.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  54              		.loc 1 48 3 is_stmt 1 view .LVU7
  55              		.loc 1 48 24 is_stmt 0 view .LVU8
  56 0018 8360     		str	r3, [r0, #8]
  49:Core/Src/adc.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  57              		.loc 1 49 3 is_stmt 1 view .LVU9
  58              		.loc 1 49 23 is_stmt 0 view .LVU10
  59 001a C360     		str	r3, [r0, #12]
  50:Core/Src/adc.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  60              		.loc 1 50 3 is_stmt 1 view .LVU11
  61              		.loc 1 50 26 is_stmt 0 view .LVU12
  62 001c 0122     		movs	r2, #1
  63 001e 0261     		str	r2, [r0, #16]
  51:Core/Src/adc.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  64              		.loc 1 51 3 is_stmt 1 view .LVU13
ARM GAS  /tmp/cctLWi27.s 			page 3


  65              		.loc 1 51 26 is_stmt 0 view .LVU14
  66 0020 0821     		movs	r1, #8
  67 0022 4161     		str	r1, [r0, #20]
  52:Core/Src/adc.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
  68              		.loc 1 52 3 is_stmt 1 view .LVU15
  69              		.loc 1 52 30 is_stmt 0 view .LVU16
  70 0024 0376     		strb	r3, [r0, #24]
  53:Core/Src/adc.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
  71              		.loc 1 53 3 is_stmt 1 view .LVU17
  72              		.loc 1 53 34 is_stmt 0 view .LVU18
  73 0026 4376     		strb	r3, [r0, #25]
  54:Core/Src/adc.c ****   hadc.Init.ContinuousConvMode = ENABLE;
  74              		.loc 1 54 3 is_stmt 1 view .LVU19
  75              		.loc 1 54 32 is_stmt 0 view .LVU20
  76 0028 8276     		strb	r2, [r0, #26]
  55:Core/Src/adc.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  77              		.loc 1 55 3 is_stmt 1 view .LVU21
  78              		.loc 1 55 35 is_stmt 0 view .LVU22
  79 002a C376     		strb	r3, [r0, #27]
  56:Core/Src/adc.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  80              		.loc 1 56 3 is_stmt 1 view .LVU23
  81              		.loc 1 56 30 is_stmt 0 view .LVU24
  82 002c C221     		movs	r1, #194
  83 002e FF31     		adds	r1, r1, #255
  84 0030 C161     		str	r1, [r0, #28]
  57:Core/Src/adc.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  85              		.loc 1 57 3 is_stmt 1 view .LVU25
  86              		.loc 1 57 34 is_stmt 0 view .LVU26
  87 0032 0362     		str	r3, [r0, #32]
  58:Core/Src/adc.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
  88              		.loc 1 58 3 is_stmt 1 view .LVU27
  89              		.loc 1 58 35 is_stmt 0 view .LVU28
  90 0034 9E39     		subs	r1, r1, #158
  91 0036 FF39     		subs	r1, r1, #255
  92 0038 4254     		strb	r2, [r0, r1]
  59:Core/Src/adc.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  93              		.loc 1 59 3 is_stmt 1 view .LVU29
  94              		.loc 1 59 21 is_stmt 0 view .LVU30
  95 003a 8362     		str	r3, [r0, #40]
  60:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
  96              		.loc 1 60 3 is_stmt 1 view .LVU31
  97              		.loc 1 60 7 is_stmt 0 view .LVU32
  98 003c FFF7FEFF 		bl	HAL_ADC_Init
  99              	.LVL1:
 100              		.loc 1 60 6 discriminator 1 view .LVU33
 101 0040 0028     		cmp	r0, #0
 102 0042 1ED1     		bne	.L6
 103              	.L2:
  61:Core/Src/adc.c ****   {
  62:Core/Src/adc.c ****     Error_Handler();
  63:Core/Src/adc.c ****   }
  64:Core/Src/adc.c **** 
  65:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  66:Core/Src/adc.c ****   */
  67:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 104              		.loc 1 67 3 is_stmt 1 view .LVU34
 105              		.loc 1 67 19 is_stmt 0 view .LVU35
ARM GAS  /tmp/cctLWi27.s 			page 4


 106 0044 0023     		movs	r3, #0
 107 0046 0193     		str	r3, [sp, #4]
  68:Core/Src/adc.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 108              		.loc 1 68 3 is_stmt 1 view .LVU36
 109              		.loc 1 68 16 is_stmt 0 view .LVU37
 110 0048 8023     		movs	r3, #128
 111 004a 5B01     		lsls	r3, r3, #5
 112 004c 0293     		str	r3, [sp, #8]
  69:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 113              		.loc 1 69 3 is_stmt 1 view .LVU38
 114              		.loc 1 69 24 is_stmt 0 view .LVU39
 115 004e 0723     		movs	r3, #7
 116 0050 0393     		str	r3, [sp, #12]
  70:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 117              		.loc 1 70 3 is_stmt 1 view .LVU40
 118              		.loc 1 70 7 is_stmt 0 view .LVU41
 119 0052 1248     		ldr	r0, .L10
 120 0054 01A9     		add	r1, sp, #4
 121 0056 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 122              	.LVL2:
 123              		.loc 1 70 6 discriminator 1 view .LVU42
 124 005a 0028     		cmp	r0, #0
 125 005c 14D1     		bne	.L7
 126              	.L3:
  71:Core/Src/adc.c ****   {
  72:Core/Src/adc.c ****     Error_Handler();
  73:Core/Src/adc.c ****   }
  74:Core/Src/adc.c **** 
  75:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  76:Core/Src/adc.c ****   */
  77:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 127              		.loc 1 77 3 is_stmt 1 view .LVU43
 128              		.loc 1 77 19 is_stmt 0 view .LVU44
 129 005e 0123     		movs	r3, #1
 130 0060 0193     		str	r3, [sp, #4]
  78:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 131              		.loc 1 78 3 is_stmt 1 view .LVU45
 132              		.loc 1 78 7 is_stmt 0 view .LVU46
 133 0062 0E48     		ldr	r0, .L10
 134 0064 01A9     		add	r1, sp, #4
 135 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 136              	.LVL3:
 137              		.loc 1 78 6 discriminator 1 view .LVU47
 138 006a 0028     		cmp	r0, #0
 139 006c 0FD1     		bne	.L8
 140              	.L4:
  79:Core/Src/adc.c ****   {
  80:Core/Src/adc.c ****     Error_Handler();
  81:Core/Src/adc.c ****   }
  82:Core/Src/adc.c **** 
  83:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  84:Core/Src/adc.c ****   */
  85:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 141              		.loc 1 85 3 is_stmt 1 view .LVU48
 142              		.loc 1 85 19 is_stmt 0 view .LVU49
 143 006e 1123     		movs	r3, #17
 144 0070 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cctLWi27.s 			page 5


  86:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 145              		.loc 1 86 3 is_stmt 1 view .LVU50
 146              		.loc 1 86 7 is_stmt 0 view .LVU51
 147 0072 0A48     		ldr	r0, .L10
 148 0074 01A9     		add	r1, sp, #4
 149 0076 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 150              	.LVL4:
 151              		.loc 1 86 6 discriminator 1 view .LVU52
 152 007a 0028     		cmp	r0, #0
 153 007c 0AD1     		bne	.L9
 154              	.L1:
  87:Core/Src/adc.c ****   {
  88:Core/Src/adc.c ****     Error_Handler();
  89:Core/Src/adc.c ****   }
  90:Core/Src/adc.c ****   /* USER CODE BEGIN ADC_Init 2 */
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /* USER CODE END ADC_Init 2 */
  93:Core/Src/adc.c **** 
  94:Core/Src/adc.c **** }
 155              		.loc 1 94 1 view .LVU53
 156 007e 05B0     		add	sp, sp, #20
 157              		@ sp needed
 158 0080 00BD     		pop	{pc}
 159              	.L6:
  62:Core/Src/adc.c ****   }
 160              		.loc 1 62 5 is_stmt 1 view .LVU54
 161 0082 FFF7FEFF 		bl	Error_Handler
 162              	.LVL5:
 163 0086 DDE7     		b	.L2
 164              	.L7:
  72:Core/Src/adc.c ****   }
 165              		.loc 1 72 5 view .LVU55
 166 0088 FFF7FEFF 		bl	Error_Handler
 167              	.LVL6:
 168 008c E7E7     		b	.L3
 169              	.L8:
  80:Core/Src/adc.c ****   }
 170              		.loc 1 80 5 view .LVU56
 171 008e FFF7FEFF 		bl	Error_Handler
 172              	.LVL7:
 173 0092 ECE7     		b	.L4
 174              	.L9:
  88:Core/Src/adc.c ****   }
 175              		.loc 1 88 5 view .LVU57
 176 0094 FFF7FEFF 		bl	Error_Handler
 177              	.LVL8:
 178              		.loc 1 94 1 is_stmt 0 view .LVU58
 179 0098 F1E7     		b	.L1
 180              	.L11:
 181 009a C046     		.align	2
 182              	.L10:
 183 009c 00000000 		.word	hadc
 184 00a0 00240140 		.word	1073816576
 185              		.cfi_endproc
 186              	.LFE40:
 188              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 189              		.align	1
ARM GAS  /tmp/cctLWi27.s 			page 6


 190              		.global	HAL_ADC_MspInit
 191              		.syntax unified
 192              		.code	16
 193              		.thumb_func
 195              	HAL_ADC_MspInit:
 196              	.LVL9:
 197              	.LFB41:
  95:Core/Src/adc.c **** 
  96:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  97:Core/Src/adc.c **** {
 198              		.loc 1 97 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 32
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		.loc 1 97 1 is_stmt 0 view .LVU60
 203 0000 30B5     		push	{r4, r5, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 5, -8
 208              		.cfi_offset 14, -4
 209 0002 89B0     		sub	sp, sp, #36
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 48
 212 0004 0400     		movs	r4, r0
  98:Core/Src/adc.c **** 
  99:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 213              		.loc 1 99 3 is_stmt 1 view .LVU61
 214              		.loc 1 99 20 is_stmt 0 view .LVU62
 215 0006 1422     		movs	r2, #20
 216 0008 0021     		movs	r1, #0
 217 000a 03A8     		add	r0, sp, #12
 218              	.LVL10:
 219              		.loc 1 99 20 view .LVU63
 220 000c FFF7FEFF 		bl	memset
 221              	.LVL11:
 100:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 222              		.loc 1 100 3 is_stmt 1 view .LVU64
 223              		.loc 1 100 15 is_stmt 0 view .LVU65
 224 0010 2268     		ldr	r2, [r4]
 225              		.loc 1 100 5 view .LVU66
 226 0012 1C4B     		ldr	r3, .L17
 227 0014 9A42     		cmp	r2, r3
 228 0016 01D0     		beq	.L15
 229              	.L12:
 101:Core/Src/adc.c ****   {
 102:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 103:Core/Src/adc.c **** 
 104:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 105:Core/Src/adc.c ****     /* ADC1 clock enable */
 106:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 107:Core/Src/adc.c **** 
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 109:Core/Src/adc.c ****     /**ADC GPIO Configuration
 110:Core/Src/adc.c ****     PA0     ------> ADC_IN0
 111:Core/Src/adc.c ****     PA1     ------> ADC_IN1
 112:Core/Src/adc.c ****     */
ARM GAS  /tmp/cctLWi27.s 			page 7


 113:Core/Src/adc.c ****     GPIO_InitStruct.Pin = ADC_INDOOR_Pin|ADC_OUTDOOR_Pin;
 114:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 115:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 116:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 117:Core/Src/adc.c **** 
 118:Core/Src/adc.c ****     /* ADC1 DMA Init */
 119:Core/Src/adc.c ****     /* ADC Init */
 120:Core/Src/adc.c ****     hdma_adc.Instance = DMA1_Channel1;
 121:Core/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 122:Core/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 123:Core/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 124:Core/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 125:Core/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 126:Core/Src/adc.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 127:Core/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 128:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 129:Core/Src/adc.c ****     {
 130:Core/Src/adc.c ****       Error_Handler();
 131:Core/Src/adc.c ****     }
 132:Core/Src/adc.c **** 
 133:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc);
 134:Core/Src/adc.c **** 
 135:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 138:Core/Src/adc.c ****   }
 139:Core/Src/adc.c **** }
 230              		.loc 1 139 1 view .LVU67
 231 0018 09B0     		add	sp, sp, #36
 232              		@ sp needed
 233              	.LVL12:
 234              		.loc 1 139 1 view .LVU68
 235 001a 30BD     		pop	{r4, r5, pc}
 236              	.LVL13:
 237              	.L15:
 106:Core/Src/adc.c **** 
 238              		.loc 1 106 5 is_stmt 1 view .LVU69
 239              	.LBB2:
 106:Core/Src/adc.c **** 
 240              		.loc 1 106 5 view .LVU70
 106:Core/Src/adc.c **** 
 241              		.loc 1 106 5 view .LVU71
 242 001c 1A4B     		ldr	r3, .L17+4
 243 001e 9A69     		ldr	r2, [r3, #24]
 244 0020 8025     		movs	r5, #128
 245 0022 AD00     		lsls	r5, r5, #2
 246 0024 2A43     		orrs	r2, r5
 247 0026 9A61     		str	r2, [r3, #24]
 106:Core/Src/adc.c **** 
 248              		.loc 1 106 5 view .LVU72
 249 0028 9A69     		ldr	r2, [r3, #24]
 250 002a 2A40     		ands	r2, r5
 251 002c 0192     		str	r2, [sp, #4]
 106:Core/Src/adc.c **** 
 252              		.loc 1 106 5 view .LVU73
 253 002e 019A     		ldr	r2, [sp, #4]
 254              	.LBE2:
ARM GAS  /tmp/cctLWi27.s 			page 8


 106:Core/Src/adc.c **** 
 255              		.loc 1 106 5 view .LVU74
 108:Core/Src/adc.c ****     /**ADC GPIO Configuration
 256              		.loc 1 108 5 view .LVU75
 257              	.LBB3:
 108:Core/Src/adc.c ****     /**ADC GPIO Configuration
 258              		.loc 1 108 5 view .LVU76
 108:Core/Src/adc.c ****     /**ADC GPIO Configuration
 259              		.loc 1 108 5 view .LVU77
 260 0030 5A69     		ldr	r2, [r3, #20]
 261 0032 8021     		movs	r1, #128
 262 0034 8902     		lsls	r1, r1, #10
 263 0036 0A43     		orrs	r2, r1
 264 0038 5A61     		str	r2, [r3, #20]
 108:Core/Src/adc.c ****     /**ADC GPIO Configuration
 265              		.loc 1 108 5 view .LVU78
 266 003a 5B69     		ldr	r3, [r3, #20]
 267 003c 0B40     		ands	r3, r1
 268 003e 0293     		str	r3, [sp, #8]
 108:Core/Src/adc.c ****     /**ADC GPIO Configuration
 269              		.loc 1 108 5 view .LVU79
 270 0040 029B     		ldr	r3, [sp, #8]
 271              	.LBE3:
 108:Core/Src/adc.c ****     /**ADC GPIO Configuration
 272              		.loc 1 108 5 view .LVU80
 113:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 273              		.loc 1 113 5 view .LVU81
 113:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 274              		.loc 1 113 25 is_stmt 0 view .LVU82
 275 0042 0323     		movs	r3, #3
 276 0044 0393     		str	r3, [sp, #12]
 114:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 277              		.loc 1 114 5 is_stmt 1 view .LVU83
 114:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 278              		.loc 1 114 26 is_stmt 0 view .LVU84
 279 0046 0493     		str	r3, [sp, #16]
 115:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 280              		.loc 1 115 5 is_stmt 1 view .LVU85
 116:Core/Src/adc.c **** 
 281              		.loc 1 116 5 view .LVU86
 282 0048 9020     		movs	r0, #144
 283 004a 03A9     		add	r1, sp, #12
 284 004c C005     		lsls	r0, r0, #23
 285 004e FFF7FEFF 		bl	HAL_GPIO_Init
 286              	.LVL14:
 120:Core/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 287              		.loc 1 120 5 view .LVU87
 120:Core/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 288              		.loc 1 120 23 is_stmt 0 view .LVU88
 289 0052 0E48     		ldr	r0, .L17+8
 290 0054 0E4B     		ldr	r3, .L17+12
 291 0056 0360     		str	r3, [r0]
 121:Core/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 292              		.loc 1 121 5 is_stmt 1 view .LVU89
 121:Core/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 293              		.loc 1 121 29 is_stmt 0 view .LVU90
 294 0058 0023     		movs	r3, #0
ARM GAS  /tmp/cctLWi27.s 			page 9


 295 005a 4360     		str	r3, [r0, #4]
 122:Core/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 296              		.loc 1 122 5 is_stmt 1 view .LVU91
 122:Core/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 297              		.loc 1 122 29 is_stmt 0 view .LVU92
 298 005c 8360     		str	r3, [r0, #8]
 123:Core/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 299              		.loc 1 123 5 is_stmt 1 view .LVU93
 123:Core/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 300              		.loc 1 123 26 is_stmt 0 view .LVU94
 301 005e 8022     		movs	r2, #128
 302 0060 C260     		str	r2, [r0, #12]
 124:Core/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 303              		.loc 1 124 5 is_stmt 1 view .LVU95
 124:Core/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 304              		.loc 1 124 39 is_stmt 0 view .LVU96
 305 0062 0561     		str	r5, [r0, #16]
 125:Core/Src/adc.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 306              		.loc 1 125 5 is_stmt 1 view .LVU97
 125:Core/Src/adc.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 307              		.loc 1 125 36 is_stmt 0 view .LVU98
 308 0064 8022     		movs	r2, #128
 309 0066 1201     		lsls	r2, r2, #4
 310 0068 4261     		str	r2, [r0, #20]
 126:Core/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 311              		.loc 1 126 5 is_stmt 1 view .LVU99
 126:Core/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 312              		.loc 1 126 24 is_stmt 0 view .LVU100
 313 006a 8361     		str	r3, [r0, #24]
 127:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 314              		.loc 1 127 5 is_stmt 1 view .LVU101
 127:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 315              		.loc 1 127 28 is_stmt 0 view .LVU102
 316 006c C361     		str	r3, [r0, #28]
 128:Core/Src/adc.c ****     {
 317              		.loc 1 128 5 is_stmt 1 view .LVU103
 128:Core/Src/adc.c ****     {
 318              		.loc 1 128 9 is_stmt 0 view .LVU104
 319 006e FFF7FEFF 		bl	HAL_DMA_Init
 320              	.LVL15:
 128:Core/Src/adc.c ****     {
 321              		.loc 1 128 8 discriminator 1 view .LVU105
 322 0072 0028     		cmp	r0, #0
 323 0074 03D1     		bne	.L16
 324              	.L14:
 133:Core/Src/adc.c **** 
 325              		.loc 1 133 5 is_stmt 1 view .LVU106
 133:Core/Src/adc.c **** 
 326              		.loc 1 133 5 view .LVU107
 327 0076 054B     		ldr	r3, .L17+8
 328 0078 2363     		str	r3, [r4, #48]
 133:Core/Src/adc.c **** 
 329              		.loc 1 133 5 view .LVU108
 330 007a 5C62     		str	r4, [r3, #36]
 133:Core/Src/adc.c **** 
 331              		.loc 1 133 5 discriminator 1 view .LVU109
 332              		.loc 1 139 1 is_stmt 0 view .LVU110
ARM GAS  /tmp/cctLWi27.s 			page 10


 333 007c CCE7     		b	.L12
 334              	.L16:
 130:Core/Src/adc.c ****     }
 335              		.loc 1 130 7 is_stmt 1 view .LVU111
 336 007e FFF7FEFF 		bl	Error_Handler
 337              	.LVL16:
 338 0082 F8E7     		b	.L14
 339              	.L18:
 340              		.align	2
 341              	.L17:
 342 0084 00240140 		.word	1073816576
 343 0088 00100240 		.word	1073876992
 344 008c 00000000 		.word	hdma_adc
 345 0090 08000240 		.word	1073872904
 346              		.cfi_endproc
 347              	.LFE41:
 349              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 350              		.align	1
 351              		.global	HAL_ADC_MspDeInit
 352              		.syntax unified
 353              		.code	16
 354              		.thumb_func
 356              	HAL_ADC_MspDeInit:
 357              	.LVL17:
 358              	.LFB42:
 140:Core/Src/adc.c **** 
 141:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 142:Core/Src/adc.c **** {
 359              		.loc 1 142 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 1 142 1 is_stmt 0 view .LVU113
 364 0000 10B5     		push	{r4, lr}
 365              	.LCFI4:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369 0002 0400     		movs	r4, r0
 143:Core/Src/adc.c **** 
 144:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 370              		.loc 1 144 3 is_stmt 1 view .LVU114
 371              		.loc 1 144 15 is_stmt 0 view .LVU115
 372 0004 0268     		ldr	r2, [r0]
 373              		.loc 1 144 5 view .LVU116
 374 0006 094B     		ldr	r3, .L22
 375 0008 9A42     		cmp	r2, r3
 376 000a 00D0     		beq	.L21
 377              	.LVL18:
 378              	.L19:
 145:Core/Src/adc.c ****   {
 146:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 147:Core/Src/adc.c **** 
 148:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 149:Core/Src/adc.c ****     /* Peripheral clock disable */
 150:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 151:Core/Src/adc.c **** 
ARM GAS  /tmp/cctLWi27.s 			page 11


 152:Core/Src/adc.c ****     /**ADC GPIO Configuration
 153:Core/Src/adc.c ****     PA0     ------> ADC_IN0
 154:Core/Src/adc.c ****     PA1     ------> ADC_IN1
 155:Core/Src/adc.c ****     */
 156:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, ADC_INDOOR_Pin|ADC_OUTDOOR_Pin);
 157:Core/Src/adc.c **** 
 158:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 159:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 160:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 161:Core/Src/adc.c **** 
 162:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 163:Core/Src/adc.c ****   }
 164:Core/Src/adc.c **** }
 379              		.loc 1 164 1 view .LVU117
 380              		@ sp needed
 381              	.LVL19:
 382              		.loc 1 164 1 view .LVU118
 383 000c 10BD     		pop	{r4, pc}
 384              	.LVL20:
 385              	.L21:
 150:Core/Src/adc.c **** 
 386              		.loc 1 150 5 is_stmt 1 view .LVU119
 387 000e 084A     		ldr	r2, .L22+4
 388 0010 9369     		ldr	r3, [r2, #24]
 389 0012 0849     		ldr	r1, .L22+8
 390 0014 0B40     		ands	r3, r1
 391 0016 9361     		str	r3, [r2, #24]
 156:Core/Src/adc.c **** 
 392              		.loc 1 156 5 view .LVU120
 393 0018 9020     		movs	r0, #144
 394              	.LVL21:
 156:Core/Src/adc.c **** 
 395              		.loc 1 156 5 is_stmt 0 view .LVU121
 396 001a 0321     		movs	r1, #3
 397 001c C005     		lsls	r0, r0, #23
 398 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 399              	.LVL22:
 159:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 400              		.loc 1 159 5 is_stmt 1 view .LVU122
 401 0022 206B     		ldr	r0, [r4, #48]
 402 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 403              	.LVL23:
 404              		.loc 1 164 1 is_stmt 0 view .LVU123
 405 0028 F0E7     		b	.L19
 406              	.L23:
 407 002a C046     		.align	2
 408              	.L22:
 409 002c 00240140 		.word	1073816576
 410 0030 00100240 		.word	1073876992
 411 0034 FFFDFFFF 		.word	-513
 412              		.cfi_endproc
 413              	.LFE42:
 415              		.global	hdma_adc
 416              		.section	.bss.hdma_adc,"aw",%nobits
 417              		.align	2
 420              	hdma_adc:
 421 0000 00000000 		.space	68
ARM GAS  /tmp/cctLWi27.s 			page 12


 421      00000000 
 421      00000000 
 421      00000000 
 421      00000000 
 422              		.global	hadc
 423              		.section	.bss.hadc,"aw",%nobits
 424              		.align	2
 427              	hadc:
 428 0000 00000000 		.space	64
 428      00000000 
 428      00000000 
 428      00000000 
 428      00000000 
 429              		.text
 430              	.Letext0:
 431              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 432              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 433              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 434              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 435              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 436              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 437              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 438              		.file 9 "Core/Inc/adc.h"
 439              		.file 10 "Core/Inc/main.h"
 440              		.file 11 "<built-in>"
ARM GAS  /tmp/cctLWi27.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
     /tmp/cctLWi27.s:19     .text.MX_ADC_Init:00000000 $t
     /tmp/cctLWi27.s:25     .text.MX_ADC_Init:00000000 MX_ADC_Init
     /tmp/cctLWi27.s:183    .text.MX_ADC_Init:0000009c $d
     /tmp/cctLWi27.s:427    .bss.hadc:00000000 hadc
     /tmp/cctLWi27.s:189    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/cctLWi27.s:195    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/cctLWi27.s:342    .text.HAL_ADC_MspInit:00000084 $d
     /tmp/cctLWi27.s:420    .bss.hdma_adc:00000000 hdma_adc
     /tmp/cctLWi27.s:350    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/cctLWi27.s:356    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/cctLWi27.s:409    .text.HAL_ADC_MspDeInit:0000002c $d
     /tmp/cctLWi27.s:417    .bss.hdma_adc:00000000 $d
     /tmp/cctLWi27.s:424    .bss.hadc:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
